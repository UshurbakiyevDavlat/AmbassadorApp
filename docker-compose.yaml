version: '3.9'
services:
  backend:
    build: .
    ports:
      - "9000:9000"
    volumes:
      - .:/app
    depends_on:
      - db
    container_name: backend-ambassador
    networks:
      - ambassador_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-ambassador
    restart: unless-stopped
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./public:/app/public
      - ./storage/app/public:/app/storage/app/public
    depends_on:
      - backend
    networks:
      - ambassador_network
  db:
    image: mysql:8
    restart: always
    container_name: db-ambassador
    environment:
      MYSQL_DATABASE: ambassador
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    volumes:
      - ./storage/dbdata:/var/lib/mysql
    ports:
      - "33066:3306"
    networks:
      - ambassador_network

  redis:
    image: redis
    container_name: redis-ambassador
    ports:
      - "6379:6379"
    networks:
      - ambassador_network

networks:
  ambassador_network:
    driver: bridge
